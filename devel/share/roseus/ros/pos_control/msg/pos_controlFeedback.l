;; Auto-generated. Do not edit!


(when (boundp 'pos_control::pos_controlFeedback)
  (if (not (find-package "POS_CONTROL"))
    (make-package "POS_CONTROL"))
  (shadow 'pos_controlFeedback (find-package "POS_CONTROL")))
(unless (find-package "POS_CONTROL::POS_CONTROLFEEDBACK")
  (make-package "POS_CONTROL::POS_CONTROLFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude pos_controlFeedback.msg.html


(defclass pos_control::pos_controlFeedback
  :super ros::object
  :slots (_q_e ))

(defmethod pos_control::pos_controlFeedback
  (:init
   (&key
    ((:q_e __q_e) 0)
    )
   (send-super :init)
   (setq _q_e (round __q_e))
   self)
  (:q_e
   (&optional __q_e)
   (if __q_e (setq _q_e __q_e)) _q_e)
  (:serialization-length
   ()
   (+
    ;; int32 _q_e
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; int32 _q_e
       (write-long _q_e s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; int32 _q_e
     (setq _q_e (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get pos_control::pos_controlFeedback :md5sum-) "5d324708c1e984101536f9f48e03da54")
(setf (get pos_control::pos_controlFeedback :datatype-) "pos_control/pos_controlFeedback")
(setf (get pos_control::pos_controlFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#Feedback
int32 q_e   # error de posicion



")



(provide :pos_control/pos_controlFeedback "5d324708c1e984101536f9f48e03da54")


