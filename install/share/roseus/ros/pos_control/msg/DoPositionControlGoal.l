;; Auto-generated. Do not edit!


(when (boundp 'pos_control::DoPositionControlGoal)
  (if (not (find-package "POS_CONTROL"))
    (make-package "POS_CONTROL"))
  (shadow 'DoPositionControlGoal (find-package "POS_CONTROL")))
(unless (find-package "POS_CONTROL::DOPOSITIONCONTROLGOAL")
  (make-package "POS_CONTROL::DOPOSITIONCONTROLGOAL"))

(in-package "ROS")
;;//! \htmlinclude DoPositionControlGoal.msg.html


(defclass pos_control::DoPositionControlGoal
  :super ros::object
  :slots (_p_d ))

(defmethod pos_control::DoPositionControlGoal
  (:init
   (&key
    ((:p_d __p_d) (make-array 0 :initial-element 0.0 :element-type :float))
    )
   (send-super :init)
   (setq _p_d __p_d)
   self)
  (:p_d
   (&optional __p_d)
   (if __p_d (setq _p_d __p_d)) _p_d)
  (:serialization-length
   ()
   (+
    ;; float32[] _p_d
    (* 4    (length _p_d)) 4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; float32[] _p_d
     (write-long (length _p_d) s)
     (dotimes (i (length _p_d))
       (sys::poke (elt _p_d i) (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
       )
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; float32[] _p_d
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _p_d (instantiate float-vector n))
     (dotimes (i n)
     (setf (elt _p_d i) (sys::peek buf ptr- :float)) (incf ptr- 4)
     ))
   ;;
   self)
  )

(setf (get pos_control::DoPositionControlGoal :md5sum-) "e418e65448f8cc2bce650f74cefb1e11")
(setf (get pos_control::DoPositionControlGoal :datatype-) "pos_control/DoPositionControlGoal")
(setf (get pos_control::DoPositionControlGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#Goal
float32[] p_d  #posicion deseada

")



(provide :pos_control/DoPositionControlGoal "e418e65448f8cc2bce650f74cefb1e11")


